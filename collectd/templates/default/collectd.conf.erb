Hostname    "<%= node.collectd[:hostname] ? node.collectd.hostname : `hostname`.strip %>"

LoadPlugin syslog
<% if log_level = node.collectd[:log_level] %>
<Plugin "syslog">
  LogLevel "<%= log_level %>"
</Plugin>
<% end %>

LoadPlugin interface
LoadPlugin load
LoadPlugin memory
LoadPlugin swap
<Plugin "swap">
  ReportByDevice false
</Plugin>

<% if @processes %>
LoadPlugin processes
<Plugin processes>
  <% @processes.each do |process_name| %>
  Process <%= process_name.to_s.inspect %>
  <% end %>
</Plugin>
<% end %>

<% if @mount_points %>
LoadPlugin df
<Plugin df>
  <% @mount_points.each do |mount_point| %>
  MountPoint <%= mount_point.to_s.inspect %>
  <% end %>
</Plugin>
<% end %>

<% if @memcached_address && @memcached_port %>
LoadPlugin memcached
<Plugin memcached>
  Host <%= @memcached_address.to_s.inspect %>
  Port <%= @memcached_port.to_s.inspect %>
</Plugin>
<% end %>

<%
  redis_host = node.collectd[:redis_host]
  redis_port = node.collectd[:redis_port]
  if redis_host && redis_port
%>
<LoadPlugin python>
  Globals true
</LoadPlugin>
<Plugin python>
  ModulePath "/opt/collectd/lib/collectd/plugins/python"
  Import "redis_info"

  <Module redis_info>
    Host <%= redis_host.inspect %>
    Port <%= redis_port %>
    Verbose false
  </Module>
</Plugin>
<% end %>

LoadPlugin disk
<Plugin "disk">
  Disk "/^sd.$/"
</Plugin>

<% if node.collectd[:graphite_address] %>
LoadPlugin write_graphite
<Plugin write_graphite>
  <Carbon>
    Host <%= node.collectd[:graphite_address].to_s.inspect %>
    Port <%= (node.collectd[:graphite_port] || 2003).to_s.inspect %>
    Prefix "collectd."
    Postfix ""
    StoreRates false
    AlwaysAppendDS false
    EscapeCharacter "-"
  </Carbon>
</Plugin>
<% else %>
LoadPlugin rrdtool
<Plugin "rrdtool">
  DataDir "/opt/collectd/rrd"
  CacheFlush 120
  WritesPerSecond 50
</Plugin>
<% end %>

#LoadPlugin exec
#<Plugin exec>
#	Exec "user:group" "/path/to/exec"
#	NotificationExec "user:group" "/path/to/exec"
#</Plugin>

<% if @nginx_url %>
LoadPlugin nginx
<Plugin nginx>
	URL "<%= @nginx_url %>"
</Plugin>
<% end %>

<% if node.collectd[:mysql] %>
LoadPlugin mysql
<Plugin "mysql">
  <Database "information_schema">
    Host "localhost"
    User "root"
    Port 3306
    <% if node.collectd[:mysql_slave] %>
    SlaveStats true
    SlaveNotifications true
    <% end %>
  </Database>
</Plugin>
<% end %>

<% if node.collectd[:mysql_slave] %>
LoadPlugin dbi
<Plugin dbi>
  <Query "seconds_behind_master">
    Statement "SHOW SLAVE STATUS"
    <Result>
      Type "gauge"
      InstancePrefix "seconds_behind_master"
      ValuesFrom "Seconds_Behind_Master"
    </Result>
  </Query>
  <Database "customers_db">
    Driver "mysql"
    DriverOption "host" "localhost"
    DriverOption "username" "collectd"
    DriverOption "dbname" "information_schema"
    Query "seconds_behind_master"
  </Database>
</Plugin>
<% end %>
